let lines = readinput();

struct ScoreCount {
	score: int,
	count: int
}

fn calc_points(winning: [string], hand: [string]) -> ScoreCount {
	let mut score = 0;
	let mut count = 0;
	for w : winning {
		if hand.contains(w) {
			count += 1;
			if score == 0 {
				score = 1;
			}
			else {
				score = score * 2;
			}
		}
	}

	return ScoreCount {
		score = score,
		count = count,
	};
}

let mut card_counts = vec<int>[lines.len()]{1};

let mut total = 0;
let mut extra_cards = 0;
for iline : 0..lines.len() {
	let pipe = lines[iline].split(':')[1].split('|');
	let winning = pipe[0].split_whitespace();

	let hand = pipe[1].split_whitespace();

	let score_count = calc_points(winning, hand);

	for c : 0..score_count.count {
		let idx = iline + c + 1;
		card_counts[idx] = card_counts[idx] + card_counts[iline];
	}

	extra_cards += score_count.count * card_counts[iline];
	total += score_count.score;
}

print(total);
print(extra_cards + lines.len());

